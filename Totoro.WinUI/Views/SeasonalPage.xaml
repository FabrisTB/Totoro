<views:SeasonalPageBase
    x:Class="Totoro.WinUI.Views.SeasonalPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.UI.Animations"
    xmlns:cm="using:Totoro.Core.Models"
    xmlns:ctk="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mal="using:MalApi"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:root="using:Totoro.WinUI"
    xmlns:uc="using:Totoro.WinUI.UserControls"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:views="using:Totoro.WinUI.Views"
    x:Name="Page"
    Margin="{ThemeResource MediumLeftRightMargin}"
    mc:Ignorable="d">

    <views:SeasonalPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/RadioButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </views:SeasonalPageBase.Resources>

    <Grid x:Name="ContentArea" Margin="0,25,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListBox
                x:Name="SeasonsStrip"
                Margin="{StaticResource SmallTopBottomMargin}"
                HorizontalAlignment="Center"
                SelectedItem="{x:Bind ViewModel.SeasonFilter, Mode=TwoWay}">
                <x:String>Previous</x:String>
                <x:String>Current</x:String>
                <x:String>Next</x:String>
                <ListBox.ItemTemplate>
                    <DataTemplate x:DataType="mal:AnimeStatus">
                        <TextBlock
                            Width="200"
                            Text="{Binding}"
                            TextAlignment="Center" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Height" Value="40" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ctk:WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>

            <AutoSuggestBox
                Grid.Row="1"
                Width="300"
                Height="35"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                PlaceholderText="Search"
                QueryIcon="Find"
                Text="{x:Bind ViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        </Grid>

        <PipsPager
            Grid.Row="1"
            Margin="{StaticResource SmallTopBottomMargin}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            NextButtonVisibility="Visible"
            NumberOfPages="{x:Bind ViewModel.PagerViewModel.PageCount, Mode=OneWay}"
            PreviousButtonVisibility="Visible"
            SelectedPageIndex="{x:Bind ViewModel.PagerViewModel.CurrentPage, Mode=TwoWay}" />


        <ctk:AdaptiveGridView
            x:Name="AnimeListView"
            Grid.Row="2"
            animations:ItemsReorderAnimation.Duration="00:00:00.4000000"
            ui:ListViewExtensions.Command="{x:Bind ViewModel.ItemClickedCommand}"
            DesiredWidth="700"
            IsItemClickEnabled="True"
            ItemsSource="{x:Bind ViewModel.Anime}"
            StretchContentForSingleRow="False">
            <ctk:AdaptiveGridView.ItemTemplate>
                <DataTemplate x:DataType="cm:AnimeModel">
                    <uc:AnimeCard
                        x:Name="Card"
                        Anime="{x:Bind}"
                        DisplayMode="DetailedGrid">
                        <uc:AnimeCard.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem
                                    Command="{x:Bind root:App.Commands.UpdateTracking}"
                                    CommandParameter="{x:Bind}"
                                    Text="Update">
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="PostUpdate" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    Command="{x:Bind root:App.Commands.Watch}"
                                    CommandParameter="{x:Bind}"
                                    Text="Watch">
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Video" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </uc:AnimeCard.Flyout>
                    </uc:AnimeCard>
                </DataTemplate>
            </ctk:AdaptiveGridView.ItemTemplate>
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Margin" Value="10" />
                </Style>
            </GridView.ItemContainerStyle>
        </ctk:AdaptiveGridView>

        <ctk:Loading
            x:Name="LoadingControl"
            Grid.Row="2"
            IsLoading="{x:Bind ViewModel.IsLoading, Mode=TwoWay}">
            <ProgressRing Margin="0,0,12,0" IsActive="True" />
        </ctk:Loading>


        <CommandBar
            Grid.Row="3"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            DefaultLabelPosition="Bottom">
            <AppBarElementContainer />
            <AppBarButton Icon="Refresh" Label="Refresh" />
            <AppBarButton Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem Text="Grid view">
                            <RadioMenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xf0e2;" />
                            </RadioMenuFlyoutItem.Icon>
                        </RadioMenuFlyoutItem>
                        <RadioMenuFlyoutItem Text="List view">
                            <RadioMenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xf0e4;" />
                            </RadioMenuFlyoutItem.Icon>
                        </RadioMenuFlyoutItem>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Sort" Label="Sort">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem
                            x:Name="PopularityRadio"
                            Command="{x:Bind ViewModel.SetSortCommand}"
                            CommandParameter="{x:Bind cm:Sort.Popularity}"
                            Text="Popularity" />
                        <RadioMenuFlyoutItem
                            x:Name="ScoreRadio"
                            Command="{x:Bind ViewModel.SetSortCommand}"
                            CommandParameter="{x:Bind cm:Sort.Score}"
                            Text="Score" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem
                            x:Name="PrevFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="prev"
                            Text="Previous" />
                        <RadioMenuFlyoutItem
                            x:Name="CurrentFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="curr"
                            Text="Current" />
                        <RadioMenuFlyoutItem
                            x:Name="NextFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="next"
                            Text="Next" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Grid>
</views:SeasonalPageBase>
